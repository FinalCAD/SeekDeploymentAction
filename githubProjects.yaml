# Trigger action on addition of this file
# Project Validation for creation
# Enter markdown formatted notes

project:
  # Unordered set of key: value pairs.
  ProjectInfo: 
    name : GHAS POV - Sample Board
    body  : A test project board for POV, POC, auto-magical creation.
  #
  ProjectDetails:
    id: 
    state:
    owner_url: James-LeHa
    repos_url: ProjectBoardCreation
    created_at:
    updated_at:
projectColumns:
  ProjectColumn1:
    id: 
    name: Backlog
  ProjectColumn2:
    id: 
    name: Evaluating
  ProjectColumn3:
    id: 
    name: Successfully evaluated
  ProjectColumn4:
    id: 
    name: Questions Remaining
projectCards:
  SuccessCriteria:
    - column: Backlog
    - note: SAST - Use GHAS Code Scanning to detect code vulnerabilities based off of the 1800+ existing CodeQL queries
    - note: SAST - Identify code vulnerability alerts along with their severity levels directly within Pull Request 
    - note: SAST - Trace vulnerabilities from Source to Sink for DataFlow related vulnerabilities
    - note: SAST - View information about detected vulnerabilities including linked CVE/CWE information, examples, and resolution recommendations
    - note: SAST - GHAS Code Scanning directly integrated within GitHub Actions Workflow
    - note: SAST - Render results of other SARIF-based SAST tools directly within the GitHub UI 
    - note: Variant Code Analysis - Codify custom queries for known problematic customer code issues or Prior CVEs
    - note: Variant Code Analysis - Scan repositories to identify variants 
    - note: Secret Scanning for Private Repos - Detection of secret keys from known token formats committed to private repositories
    - note: Secret Scanning for Private Repos - Secret scanning resolution information including whether it was a resolved, a false positive, or just ignored
    - note: Open Source Dependency Analysis - Identify transitive dependencies (dependency graph) along with a link to the OSS repository in an individual repository
    - note: Open Source Dependency Analysis - Identify dependencies across an organization
    - note: Open Source Dependency Analysis - Source OSS dependency vulnerability information from the GitHub Advisory Database
    - note: Open Source Dependency Analysis - Alert maintainers of any vulnerable dependencies in their repositories along with their severity levels and a link to relevant files.
    - note: Open Source Dependency Analysis - Automatically update dependency vulnerabilities with Dependabot security updates
    - note: Open Source Dependency Analysis - View Security Alerts across the entire Organization while being able to filter based on severity level and view the dependent repositories.
    - note: Open Source Dependency Analysis - Identify and view OSS license usage across the entire Organization
    - note: Promote Collaborative Secure Development Process - Capture discussion about secure code development decisions
    - note: Promote Collaborative Secure Development Process - Facilitate creation of teams focused on expertise and/or areas of interest
    - note: Promote Collaborative Secure Development Process - Invite non-core teams (expertise, interest, discipline) to review process
 